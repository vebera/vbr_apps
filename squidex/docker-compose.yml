version: '3.9'

services:

  squidex_app:
    image: ${SQUIDEX_IMAGE}
    container_name: ${SQUIDEX_CONTAINER}
    ports:
      - ${SQUIDEX_PORT}:80
    environment:
      - URLS__BASEURL=${SQUIDEX_PROTOCOL}://${SQUIDEX_DOMAIN}/
      - URLS__ENFORCEHTTPS=${SQUIDEX_FORCE_HTTPS}
      - EVENTSTORE__MONGODB__CONFIGURATION=mongodb://mongodb
      - STORE__MONGODB__CONFIGURATION=mongodb://mongodb
      - IDENTITY__ADMINEMAIL=${SQUIDEX_ADMINEMAIL}
      - IDENTITY__ADMINPASSWORD=${SQUIDEX_ADMINPASSWORD}
      - IDENTITY__GOOGLECLIENT=${SQUIDEX_GOOGLECLIENT}
      - IDENTITY__GOOGLESECRET=${SQUIDEX_GOOGLESECRET}
      - IDENTITY__GITHUBCLIENT=${SQUIDEX_GITHUBCLIENT}
      - IDENTITY__GITHUBSECRET=${SQUIDEX_GITHUBSECRET}
      - IDENTITY__MICROSOFTCLIENT=${SQUIDEX_MICROSOFTCLIENT}
      - IDENTITY__MICROSOFTSECRET=${SQUIDEX_MICROSOFTSECRET}
#      - LETSENCRYPT_HOST=${SQUIDEX_DOMAIN}
#      - LETSENCRYPT_EMAIL=${SQUIDEX_ADMINEMAIL}
    volumes:
      - /etc/squidex/assets:/app/Assets
    networks:
      - internal
      - proxy
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.squidex.entrypoints: websecure
      traefik.http.routers.squidex.rule: Host(`${SQUIDEX_URL}`)
      traefik.http.routers.squidex.tls.certresolver: letsencrypt
#      traefik.http.services.squidex.loadbalancer.server.port: 80
    restart: unless-stopped

networks:
  proxy:
    external: true
  internal:
    external: false
