version: "3.3"

services:

  traefik:
    image: traefik:v2.5.5
    container_name: traefik
    networks:
      - proxy
      - default
    restart: always
    command:
      # connect token to traefik pilot:
      - --pilot.token=${PILOT_TOKEN}
      # Enable the access log, with HTTP requests:
      - --accesslog
      # Enable the Traefik log, for configurations and errors:
      - --log
      - --log.level=${LOG_LEVEL}
      # Enable the Dashboard and API:
      - --api
      - --api.dashboard
      - --api.insecure=${TRAEFIK_API_INSECURE:-false}
      - --api.debug=${TRAEFIK_API_DEBUG:-false}
      # Enable Docker in Traefik, so that it reads labels from Docker services:
      - --providers.docker=true
      # Do not expose all Docker services, only the ones explicitly exposed:
      - --providers.docker.exposedbydefault=false

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.users/:/.users:ro
    labels:
      # Enable Traefik for this service, to make it available in the public network:
      traefik.enable: true

      # Routers 
      traefik.http.routers.traefik.rule: Host(`${DASHBOARD_TRAEFIK_URL}`)
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.tls.certresolver: letsencrypt
      traefik.http.routers.traefik.middlewares: traefik-auth

      # Global redirect to HTTPS:
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.middlewares: redirect-to-https

      # Middleware Redirect:
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
#      traefik.http.middlewares.traefik-auth.basicauth.users: ${AUTH_USER}:${AUTH_PASS}
      traefik.http.middlewares.traefik-auth.basicauth.usersfile: /.users/users.txt

networks:
  proxy:
    external: true
